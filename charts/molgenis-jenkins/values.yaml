jenkins:
  # clusterZone: "edgecluster.local"
  master:
    image: "jenkins/jenkins"
    tag: "2.215"
    ingress:
      enabled: true
      # hostName: jenkins.edge.molgenis.org
    # serviceType: ClusterIP
    serviceType: NodePort
    installPlugins:
      - kubernetes:1.23.0
      - workflow-aggregator:2.6
      - workflow-job:2.36
      - credentials-binding:1.20
      - embeddable-build-status:2.0.3
      - git:4.0.0
      - github-branch-source:2.5.8
      - basic-branch-build-strategies:1.3.2
      - kubernetes-credentials-provider:0.13
      - blueocean:1.21.0
      - pipeline-github-lib:1.0
      - github-oauth:0.33
      - github-scm-trait-commit-skip:0.4.0
      - ansible:1.0
      - hubot-steps:2.0.5
      - prometheus:2.0.6
      - github-pullrequest:0.2.6
      - token-macro:2.10
      - configuration-as-code:1.35
      - job-dsl:1.76
      - matrix-auth:2.5
    overwritePlugins: true
    resources:
      limits:
        cpu: 500m
        memory: 4096Mi
      requests:
        cpu: 500m
        memory: 2000Mi
    containerEnv:
      - name: "GITHUB_AUTH_CLIENT_ID"
        value: "03c6a32798c2b6e12632"
      - name: "GITHUB_AUTH_CLIENT_SECRET"
        value: "7b01d91890e00e12bf25e4d9649b0d4664db18bd"
      - name: "PREVIEW_JOB_AUTH_TOKEN"
        value: "ABCDEFG"
      - name: "GITHUB_ORG_NAME"
        value: "molgenis-jenkins"
      # - name: "CASC_VAULT_URL"
      #   value: ""
      # - name: "CASC_VAULT_APPROLE"
      #   value: ""
      # - name: "CASC_VAULT_SECRET"
      #   value: ""
      # - name: "CASC_VAULT_PATHS"
      #   value: "secret/ops/..."
      # - name: "CASC_VAULT_ENGINE_VERSION"
      #   value: "1"
    additionalConfig:
      org.thoughtslive.jenkins.plugins.hubot.config.GlobalConfig.xml: |-
        <?xml version='1.1' encoding='UTF-8'?>
        <org.thoughtslive.jenkins.plugins.hubot.config.GlobalConfig plugin="hubot-steps@2.0.2">
          <sites>
            <org.thoughtslive.jenkins.plugins.hubot.config.HubotSite>
              <defaultSite>true</defaultSite>
              <name>hubot.molgenis.org</name>
              <url>http://molgenis-hubot.molgenis-hubot.svc</url>
              <room>hubot</room>
              <roomPrefix></roomPrefix>
              <failOnError>true</failOnError>
              <useFolderName>false</useFolderName>
              <notifications>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>STARTED</notificationType>
                  <tokens>JENKINS_URL, BUILD_NUMBER, BLUE_OCEAN_URL</tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>SUCCESS</notificationType>
                  <tokens>BUILD_DURATION</tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>FAILURE</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>BACK_TO_NORMAL</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>ABORTED</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>NOT_BUILT</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>UNSTABLE</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
              </notifications>
            </org.thoughtslive.jenkins.plugins.hubot.config.HubotSite>
            <org.thoughtslive.jenkins.plugins.hubot.config.HubotSite>
              <defaultSite>false</defaultSite>
              <name>slack-general</name>
              <url>http://molgenis-hubot.molgenis-hubot.svc</url>
              <room>general</room>
              <roomPrefix></roomPrefix>
              <failOnError>true</failOnError>
              <useFolderName>false</useFolderName>
              <notifications>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>STARTED</notificationType>
                  <tokens>JENKINS_URL, BUILD_NUMBER, BLUE_OCEAN_URL</tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>SUCCESS</notificationType>
                  <tokens>BUILD_DURATION</tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>FAILURE</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>BACK_TO_NORMAL</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>ABORTED</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>NOT_BUILT</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>UNSTABLE</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
              </notifications>
            </org.thoughtslive.jenkins.plugins.hubot.config.HubotSite>
            <org.thoughtslive.jenkins.plugins.hubot.config.HubotSite>
              <defaultSite>false</defaultSite>
              <name>slack-pr-app-team</name>
              <url>http://molgenis-hubot.molgenis-hubot.svc</url>
              <room>pr-app-team</room>
              <roomPrefix></roomPrefix>
              <failOnError>true</failOnError>
              <useFolderName>false</useFolderName>
              <notifications>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>STARTED</notificationType>
                  <tokens>JENKINS_URL, BUILD_NUMBER, BLUE_OCEAN_URL</tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>SUCCESS</notificationType>
                  <tokens>BUILD_DURATION</tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>FAILURE</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>BACK_TO_NORMAL</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>ABORTED</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>NOT_BUILT</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>UNSTABLE</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
              </notifications>
            </org.thoughtslive.jenkins.plugins.hubot.config.HubotSite>
            <org.thoughtslive.jenkins.plugins.hubot.config.HubotSite>
              <defaultSite>false</defaultSite>
              <name>slack-pr-platform</name>
              <url>http://molgenis-hubot.molgenis-hubot.svc</url>
              <room>pr-platform</room>
              <roomPrefix></roomPrefix>
              <failOnError>true</failOnError>
              <useFolderName>false</useFolderName>
              <notifications>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>STARTED</notificationType>
                  <tokens>JENKINS_URL, BUILD_NUMBER, BLUE_OCEAN_URL</tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>SUCCESS</notificationType>
                  <tokens>BUILD_DURATION</tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>FAILURE</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>BACK_TO_NORMAL</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>ABORTED</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>NOT_BUILT</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>UNSTABLE</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
              </notifications>
            </org.thoughtslive.jenkins.plugins.hubot.config.HubotSite>
            <org.thoughtslive.jenkins.plugins.hubot.config.HubotSite>
              <defaultSite>false</defaultSite>
              <name>slack-pr-ops</name>
              <url>http://molgenis-hubot.molgenis-hubot.svc</url>
              <room>pr-ops</room>
              <roomPrefix></roomPrefix>
              <failOnError>true</failOnError>
              <useFolderName>false</useFolderName>
              <notifications>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>STARTED</notificationType>
                  <tokens>JENKINS_URL, BUILD_NUMBER, BLUE_OCEAN_URL</tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>SUCCESS</notificationType>
                  <tokens>BUILD_DURATION</tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>FAILURE</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>BACK_TO_NORMAL</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>ABORTED</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>NOT_BUILT</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                <org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
                  <notifyEnabled>true</notifyEnabled>
                  <roomNames></roomNames>
                  <notificationType>UNSTABLE</notificationType>
                  <tokens></tokens>
                </org.thoughtslive.jenkins.plugins.hubot.config.notifications.Config>
              </notifications>
            </org.thoughtslive.jenkins.plugins.hubot.config.HubotSite>
          </sites>
        </org.thoughtslive.jenkins.plugins.hubot.config.GlobalConfig>
    JCasC:
      enabled: true
      configScripts:
        jobs: |-
          jobs:
            - script: >
                pipelineJob('test-e2e') {
                  description('The end-2-end tests for MOLGENIS')
                  definition {
                    cpsScm {
                      lightweight()
                      scm {
                        github('molgenis/molgenis-ops-helm', 'master')
                        scriptPath('charts/molgenis-jenkins/resources/tests/e2e/Jenkinsfile')
                      }
                    }
                  }
                  triggers {
                    cron('TZ=Europe/Amsterdam\nH 1 * * 1-5')
                  }
                  authorization {
                    permission('hudson.model.Item.Workspace:authenticated')
                  }
                }
            - script: >
                pipelineJob('test-e2e-commander') {
                  description('The nightly MOLGENIS Commander integration tests')
                  definition {
                    cpsScm {
                      lightweight()
                      scm {
                        github('molgenis/molgenis-ops-helm', 'master')
                        scriptPath('charts/molgenis-jenkins/resources/tests/e2e-commander/Jenkinsfile')
                      }
                    }
                  }
                  triggers {
                    cron('TZ=Europe/Amsterdam\nH 1 * * 1-5')
                  }
                  authorization {
                    permission('hudson.model.Item.Workspace:authenticated')
                  }
                }
            - script: >
                pipelineJob('test-live') {
                  description('The live data tests for MOLGENIS')
                  definition {
                    cpsScm {
                      lightweight()
                      scm {
                        github('molgenis/molgenis-ops-helm', 'master')
                        scriptPath('charts/molgenis-jenkins/resources/tests/live/Jenkinsfile')
                      }
                    }
                  }
                  triggers {
                    cron('TZ=Europe/Amsterdam\nH 1 * * 1-5')
                  }
                  authorization {
                    permission('hudson.model.Item.Workspace:authenticated')
                  }
                }
            - script: >
                pipelineJob('test-nightly') {
                  description('The nightly build for MOLGENIS')
                  definition {
                    cpsScm {
                      lightweight()
                      scm {
                        github('molgenis/molgenis-ops-helm', 'master')
                        scriptPath('charts/molgenis-jenkins/resources/tests/nightly/Jenkinsfile')
                      }
                    }
                  }
                  triggers {
                    cron('TZ=Europe/Amsterdam\nH 1 * * 1-5')
                  }
                  authorization {
                    permission('hudson.model.Item.Workspace:authenticated')
                  }
                }
            - script: >
                pipelineJob('cleanup') {
                  description('Clean up preview deployments every night')
                  definition {
                    cpsScm {
                      lightweight()
                      scm {
                        github('molgenis/molgenis-ops-helm', 'master')
                        scriptPath('charts/molgenis-jenkins/resources/cleanup/Jenkinsfile')
                      }
                    }
                  }
                  triggers {
                    cron('TZ=Europe/Amsterdam\nH H(0-5) * * *')
                  }
                  authorization {
                    permission('hudson.model.Item.Workspace:authenticated')
                  }
                }
            - script: >
                pipelineJob('preview') {
                  description('Preview a molgenis PR')
                  parameters {
                    choiceParam('ACTION', ['install', 'delete', 'list'], 'What action to perform')
                    stringParam('TAG', 'dev', 'The docker tag to deploy')
                  }
                  authenticationToken('${PREVIEW_JOB_AUTH_TOKEN}')
                  definition {
                    cpsScm {
                      lightweight()
                      scm {
                        github('molgenis/molgenis-ops-helm', 'master')
                        scriptPath('charts/molgenis-jenkins/resources/preview/Jenkinsfile')
                      }
                    }
                  }
                }
            - script: >
                organizationFolder('${GITHUB_ORG_NAME}') {
                  description('MOLGENIS projects in the MOLGENIS organization')
                  displayName('${GITHUB_ORG_NAME}')
                  triggers {
                      periodic(86400)
                  }
                  organizations {
                    github {
                      repoOwner('${GITHUB_ORG_NAME}')
                      apiUri("https://api.github.com")
                      credentialsId('molgenis-jenkins-github-secret')
                      scanCredentialsId('molgenis-jenkins-github-secret')
                    }
                  }
                  configure {
                    def traits = it / navigators / 'org.jenkinsci.plugins.github__branch__source.GitHubSCMNavigator' / traits
                    traits << 'jenkins.scm.impl.trait.RegexSCMSourceFilterTrait' {
                        regex 'molgenis.*'
                    }
                    traits << 'org.jenkinsci.plugins.github__branch__source.BranchDiscoveryTrait' {
                        strategyId 1
                    }
                    traits << 'org.jenkinsci.plugins.github__branch__source.OriginPullRequestDiscoveryTrait' {
                        strategyId 2
                    }
                    traits << 'org.jenkinsci.plugins.github__branch__source.ForkPullRequestDiscoveryTrait' {
                        strategyId 2
                        trust(class: 'org.jenkinsci.plugins.github_branch_source.ForkPullRequestDiscoveryTrait$TrustPermission')
                    }
                    traits << 'org.jenkinsci.plugins.scm__filter.GitHubCommitSkipTrait' {}
                    traits << 'jenkins.plugins.git.traits.LocalBranchTrait' {
                        extension(class: 'hudson.plugins.git.extensions.impl.LocalBranch') {
                            localBranch '**'
                        }
                    }
                    traits << 'jenkins.plugins.git.traits.UserIdentityTrait' {
                        extension(class: 'hudson.plugins.git.extensions.impl.UserIdentity') {
                            name 'MOLGENIS Jenkins'
                            email 'molgenis+ci@gmail.com'
                        }
                    }
                  }
                }
            - script: >
                organizationFolder('other') {
                  description('Non-MOLGENIS projects in the MOLGENIS organization')
                  displayName('Other')
                  triggers {
                      periodic(86400)
                  }
                  organizations {
                    github {
                      repoOwner('${GITHUB_ORG_NAME}')
                      apiUri("https://api.github.com")
                      credentialsId('molgenis-jenkins-github-secret')
                      scanCredentialsId('molgenis-jenkins-github-secret')
                    }
                  }
                  configure {
                    def traits = it / navigators / 'org.jenkinsci.plugins.github__branch__source.GitHubSCMNavigator' / traits
                    traits << 'jenkins.scm.impl.trait.RegexSCMSourceFilterTrait' {
                        regex '^(?!molgenis)(?!NGS)(?!GAP).*'
                    }
                    traits << 'org.jenkinsci.plugins.github__branch__source.BranchDiscoveryTrait' {
                        strategyId 1
                    }
                    traits << 'org.jenkinsci.plugins.github__branch__source.OriginPullRequestDiscoveryTrait' {
                        strategyId 2
                    }
                    traits << 'org.jenkinsci.plugins.github__branch__source.ForkPullRequestDiscoveryTrait' {
                        strategyId 2
                        trust(class: 'org.jenkinsci.plugins.github_branch_source.ForkPullRequestDiscoveryTrait$TrustPermission')
                    }
                    traits << 'org.jenkinsci.plugins.scm__filter.GitHubCommitSkipTrait' {}
                    traits << 'jenkins.plugins.git.traits.LocalBranchTrait' {
                        extension(class: 'hudson.plugins.git.extensions.impl.LocalBranch') {
                            localBranch '**'
                        }
                    }
                    traits << 'jenkins.plugins.git.traits.UserIdentityTrait' {
                        extension(class: 'hudson.plugins.git.extensions.impl.UserIdentity') {
                            name 'MOLGENIS Jenkins'
                            email 'molgenis+ci@gmail.com'
                        }
                    }
                  }
                }
        git: |
          unclassified:
            gitSCM:
              globalConfigEmail: "molgenis+ci@gmail.com"
              globalConfigName: "MOLGENIS Jenkins"
            gitHubPluginConfig:
              configs:
                - name: GitHub
                  manageHooks: false
                  credentialsId: "molgenis-jenkins-github-token-secret"
        security: |
          jenkins:
            securityRealm:
              github:
                githubWebUri: "https://github.com"
                githubApiUri: "https://api.github.com"
                clientID: "${GITHUB_AUTH_CLIENT_ID}"
                clientSecret: "${GITHUB_AUTH_CLIENT_SECRET}"
                oauthScopes: "read:org,user:email"
            authorizationStrategy:
              github:
                organizationNames: "molgenis"
                useRepositoryPermissions: true
                adminUserNames: "sidohaakma, fdlk, molgenis-jenkins"
                allowAnonymousJobStatusPermission: true
                allowAnonymousReadPermission: false
                allowCcTrayPermission: false
                allowGithubWebHookPermission: true
                authenticatedUserCreateJobPermission: false
                authenticatedUserReadPermission: false
        kubernetes: |-
          jenkins:
            clouds:
            - kubernetes:
                name: "kubernetes"
                containerCapStr: "10"
                jenkinsTunnel: "molgenis-jenkins-agent:50000"
                jenkinsUrl: "http://molgenis-jenkins:8080"
                maxRequestsPerHostStr: "32"
                name: "kubernetes"
                namespace: "default"
                serverUrl: ""
                templates:
                  - name: shared
                    label: shared
                    containers:
                      - name: kaniko
                        image: "gcr.io/kaniko-project/executor:debug-v0.7.0"
                        command: cat
                        args: ""
                        ttyEnabled: true
                      - name: rancher
                        image: "rancher/cli2:v2.2.0"
                        ttyEnabled: true
                      - name: vault
                        image: "vault:1.3.1"
                        ttyEnabled: true
                        envVars:
                          - secretEnvVar:
                              key: VAULT_TOKEN
                              secretName: molgenis-pipeline-vault-secret
                              secretKey: token
                          - secretEnvVar:
                              key: VAULT_SKIP_VERIFY
                              secretName: molgenis-pipeline-vault-secret
                              secretKey: skipVerify
                          - secretEnvVar:
                              key: VAULT_ADDR
                              secretName: molgenis-pipeline-vault-secret
                              secretKey: addr
                      - name: sonar
                        image: "molgenis/sonarqube-scanner:sonarqube-scanner-release-2019-08-07_20-09-36"
                        ttyEnabled: true
                    envVars:
                      - envVar:
                          key: "npm_config_registry"
                          value: "https://registry.molgenis.org/repository/npm-central/"
                      - envVar:
                          key: LOCAL_REGISTRY
                          value: registry.molgenis.org
                      - envVar:
                          key: DOCKER_REGISTRY
                          value: registry.hub.docker.com
                      - envVar:
                          key: HELM_REPO
                          value: https://registry.molgenis.org/repository/helm/
                      - envVar:
                          key: HELM_REPOSITORY
                          value: https://helm.molgenis.org/
                    nodeUsageMode: NORMAL
                    volumes:
                      - hostPathVolume:
                          hostPath: "/var/run/docker.sock"
                          mountPath: "/var/run/docker.sock"
                  - name: molgenis
                    label: molgenis
                    inheritFrom: shared
                    nodeUsageMode: EXCLUSIVE
                    containers:
                      - name: maven
                        image: "molgenis/maven-jdk11:maven-jdk11-release-2019-05-07_09-20-11"
                        ttyEnabled: true
                        resourceRequestCpu: "1"
                        resourceRequestMemory: "4Gi"
                        envVars:
                          - envVar:
                              key: MAVEN_OPTS
                              value: "-Duser.home=/home/jenkins"
                          - envVar:
                              key: MAVEN_CONFIG
                              value: "/home/jenkins/.m2"
                  - name: node
                    label: node-carbon
                    nodeUsageMode: EXCLUSIVE
                    inheritFrom: shared
                    containers:
                      - name: node
                        image: "molgenis/node-carbon:node-carbon-release-2019-11-25_10-52-39"
                        ttyEnabled: true
                        resourceRequestCpu: "1"
                        resourceRequestMemory: "1Gi"
                  - name: node-dubnium
                    label: node-dubnium
                    nodeUsageMode: EXCLUSIVE
                    inheritFrom: shared
                    containers:
                      - name: node
                        image: "molgenis/node-dubnium:node-dubnium-release-2019-11-25_10-52-39"
                        ttyEnabled: true
                        resourceRequestCpu: "1"
                        resourceRequestMemory: "1Gi"
                    envVars:
                      - envVar:
                          key: NPM_REGISTRY
                          value: registry.npmjs.org
                      - envVar:
                          key: NPM_LOCAL_REGISTRY
                          value: registry.molgenis.org/repository/npm-hosted
                  - name: python
                    label: python-stretch
                    nodeUsageMode: EXCLUSIVE
                    inheritFrom: shared
                    containers:
                      - name: python
                        image: "python:stretch"
                        ttyEnabled: true
                        resourceRequestCpu: "100m"
                        resourceRequestMemory: "250Mi"
                        resourceLimitMemory: "512Mi"
                    envVars:
                      - envVar:
                          key: PYPI_REGISTRY
                          value: https://upload.pypi.org/legacy/
                      - envVar:
                          key: PYPI_LOCAL_REGISTRY
                          value: https://registry.molgenis.org/repository/pypi/
                  - name: molgenis-it
                    label: molgenis-it
                    nodeUsageMode: EXCLUSIVE
                    inheritFrom: molgenis
                    containers:
                      - name: elasticsearch
                        image: docker.elastic.co/elasticsearch/elasticsearch:5.5.3
                        resourceRequestCpu: "100m"
                        resourceRequestMemory: "1Gi"
                        resourceLimitMemory: "1500Mi"
                        envVars:
                          - envVar:
                              key: ES_JAVA_OPTS
                              value: '-Xms512m -Xmx512m'
                          - envVar:
                              key: cluster.name
                              value: molgenis
                          - envVar:
                              key: bootstrap.memory_lock
                              value: 'true'
                          - envVar:
                              key: xpack.security.enabled
                              value: 'false'
                          - envVar: 
                              key: xpack.monitoring.enabled
                              value: 'false'
                          - envVar: 
                              key: xpack.watcher.enabled
                              value: 'false'
                          - envVar: 
                              key: discovery.type
                              value: single-node
                      - name: postgres
                        image: postgres:11-alpine
                        ttyEnabled: true
                        resourceRequestCpu: "100m"
                        resourceRequestMemory: "250Mi"
                        resourceLimitMemory: "250Mi"
                        envVars:
                          - envVar:
                              key: POSTGRES_USER
                              value: molgenis
                          - envVar:
                              key: POSTGRES_PASSWORD
                              value: molgenis
                          - envVar:
                              key: POSTGRES_DB
                              value: molgenis
                      - name: opencpu
                        image: "molgenis/opencpu:opencpu-release-2019-03-06_08-18-10"
                        ttyEnabled: true
                        resourceRequestCpu: "100m"
                        resourceRequestMemory: "256Mi"
                        resourceLimitMemory: "512Mi" 
                  - name: site-gen
                    label: site-gen
                    nodeUsageMode: EXCLUSIVE
                    inheritFrom: shared
                    containers:
                      - name: jekyll
                        image: "molgenis/jekyll:jekyll-release-2019-03-06_08-18-10"
                        ttyEnabled: true
                  - name: ansible
                    label: ansible
                    inheritFrom: shared
                    nodeUsageMode: EXCLUSIVE
                    containers:
                      - name: centos-6
                        image: "centos:6.10"
                        ttyEnabled: true
                  - name: r-3.5.2
                    label: r-3.5.2
                    inheritFrom: shared
                    nodeUsageMode: EXCLUSIVE
                    containers:
                      - name: r
                        image: "rocker/verse:3.5.2"
                        ttyEnabled: true
                      - name: curl
                        image: "appropriate/curl:latest"
                        ttyEnabled: true
    # TODO: enable
    # nodeSelector:
      # deployPod: "true"
    scriptApproval:
      - "staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods replaceAll java.lang.String java.util.regex.Pattern java.lang.String"
  rbac:
    readSecrets: true

# secret contains configuration for the kubernetes secrets that jenkins can access
secret:
  # vault configures the vault secret
  vault:
    token: 'xxxx'
    # local vault: 'https://vault-operator.vault-operator.svc:8200'
    # But for cross-cluster access use the node port:
    addr: 'https://192.168.64.161:30221'
    skipVerify: '1'
  # githubToken contains access token for jenkins bot account on github.com
  gitHub:
    user: 'molgenis-jenkins'
    token: 'xxxx'
  # registry contains credentials for registry.molgenis.org
  registry:
    user: 'admin'
    password: 'xxxx'
  # dockerHubPassword contains password for hub.docker.com
  dockerHub:
    user: 'molgenisci'
    password: 'xxxx'
