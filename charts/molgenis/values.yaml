# Default values for molgenis
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 0
  path: /
  tls: []

image:
  repository: registry.hub.docker.com
  name: molgenis/molgenis-app
  tag: stable
environment: test
# Sentry config. The format is https://{public key}@sentry.molgenis.org/{project id}
sentry:
  dsn: xxxx
python:
  executable: "/usr/bin/python3"
adminPassword:
opencpu: opencpu-opencpu.molgenis-opencpu
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 5Gi
  # existingClaim: ""
resources:
  limits:
    cpu: 1
    memory: 2Gi
  requests: {}

service:
  type: ClusterIP
  port: 8080

nodeSelector:
  deployPod: "true"
tolerations: []
affinity: {}

molgenis-elasticsearch:
  enabled: true
  persistence:
    enabled: true
  master:
    clusterName: molgenis
    javaOpts: "-Xms1g -Xmx1g"
    persistence:
      size: 5Gi
    resources:
      limits:
        cpu: 2
        memory: 2Gi
      requests: {}

postgresql:
  enabled: true
  image:
    tag: 11.1.0-debian-9-r71
    pullPolicy: IfNotPresent
  ## Specify runtime config parameters as a dict, using camelCase
  ## ref: https://www.postgresql.org/docs/current/static/runtime-config.html
  configuration:
    maxLocksPerTransaction: 1024
  postgresqlUsername: molgenis
  postgresqlPassword: molgenis
  postgresqlDatabase: molgenis
  persistence:
    size: 5Gi
  resources:
    requests: {}
    limits:
      memory: 512Mi
      cpu: 250m
  metrics:
    enabled: true

minio:
  enabled: true
  persistence:
    enabled: true
    retain: false
    size: 5Gi
  resources:
    requests: {}
    limits:
      memory: 256Mi
      cpu: 100m
  defaultBucket:
    enabled: true
    name: molgenis
  service:
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path:   '/minio/prometheus/metrics'
      prometheus.io/port:   '9000'
