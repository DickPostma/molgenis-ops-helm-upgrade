replicaCount: 1

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

server:
  image:
    repository: registry.molgenis.org/molgenis/datashield-service
    tag: dev
    pullPolicy: Always
  debug: false
  admin:
    username: admin
    password: admin
  audit:
    accessMode: ReadWriteOnce
    size: 100M
  filebeat:
    enabled: false
    image:
      repository: docker.elastic.co/beats/filebeat-oss
      tag: 7.9.3
      pullPolicy: IfNotPresent
    elasticsearch: 'http://elasticsearch:9200'
    persistence:
      accessMode: ReadWriteOnce
      size: 100M
  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 1
      memory: 1Gi
  config:
    # You can provide any config you like here
    logging:
      config: classpath:logback-file.xml
    audit:
      log:
        path: /app/logs/audit.log
    spring:
      security:
        user:
          roles:
            - SU
        oauth2:
          resourceserver:
            jwt:
              issuer-uri: 'https://auth.molgenis.org'
            opaquetoken:
              client-id: 'b396233b-cdb2-449e-ac5c-a0d28b38f791'

molgenis-rserve:
  enabled: true
  resources:
    limits:
      cpu: 2
      memory: 2Gi
    requests:
      cpu: 2
      memory: 2Gi
  nodeSelector:
    deployPod: "true"

minio:
  image:
    repository: minio/minio
    tag: RELEASE.2020-07-02T00-15-09Z
  enabled: true
  accessKey: datashield
  secretKey: datashield
  persistence:
    enabled: true
    retain: false
    size: 5Gi
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      cpu: 250m
      memory: 256Mi
  defaultBucket:
    enabled: false
  minioConfig:
    region: ""
  service:
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path: '/minio/prometheus/metrics'
      prometheus.io/port: '9000'
  environment:
    MINIO_IDENTITY_OPENID_CLIENT_ID:
    MINIO_IDENTITY_OPENID_CONFIG_URL: "https://auth.molgenis.org/.well-known/openid-configuration"

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 0

nodeSelector:
  deployPod: "true"

tolerations: []

affinity: {}
